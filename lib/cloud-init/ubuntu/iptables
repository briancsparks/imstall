#!/bin/bash -e

echo "===== iptables ===== start"

# ================================================================================================================
# Gather necessary settings and data
# ================================================================================================================

# -----------------------------------------------------------------------------
# Get CIDR

IFACE="ens5"
IFACE_MAC=$(cat /sys/class/net/${IFACE}/address)
VPC_CIDR_URI="http://169.254.169.254/latest/meta-data/network/interfaces/macs/${IFACE_MAC}/vpc-ipv4-cidr-block"
VPC_CIDR_RANGE=$(curl --retry 3 --silent --fail "${VPC_CIDR_URI}")


# ================================================================================================================
# Configuration
# ================================================================================================================

# -----------------------------------------------------------------------------
# NAT

sudo sysctl -q -w net.ipv4.ip_forward=1 net.ipv4.conf.${IFACE}.forwarding=1
sudo iptables -A FORWARD -o ${IFACE} -j ACCEPT
sudo iptables -A FORWARD -i ${IFACE} -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -t nat -A POSTROUTING -o "${IFACE}" -j MASQUERADE



# -----------------------------------------------------------------------------
# TODO: we do not have the home dir for ubuntu while cloud-init, but we should save this script somewhere.

## Show it worked
#[[ -d /home/ubuntu ]] || echo "HOME not up yet???"
#
#if [[ -d /home/ubuntu ]]; then
#  touch /home/ubuntu/provision.log
#  chown ubuntu:ubuntu /home/ubuntu/provision.log
#  chmod 0644 /home/ubuntu/provision.log
#
#  sudo sysctl net.ipv4.ip_forward net.ipv4.conf.${IFACE}.send_redirects net.ipv4.conf.${IFACE}.forwarding >> /home/ubuntu/provision.log
#  sudo iptables -n -t iptables -L POSTROUTING >> /home/ubuntu/provision.log
#fi



# ================================================================================================================
# Install tools
# ================================================================================================================

# -----------------------------------------------------------------------------
# iptables-persistent

# Do not prompt when installing iptables-persistent
echo iptables-persistent iptables-persistent/autosave_v4 boolean true | sudo debconf-set-selections
echo iptables-persistent iptables-persistent/autosave_v6 boolean true | sudo debconf-set-selections

sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends iptables-persistent netfilter-persistent

## Note, to see that the "...autosave_vX boolean true | ..." worked:
#sudo apt install debconf-utils
#sudo debconf-get-selections | grep iptables

iptables-save  | sudo tee /etc/iptables/rules.v4
ip6tables-save | sudo tee /etc/iptables/rules.v6



# ================================================================================================================
# Save helpful scripts
# ================================================================================================================

# TODO: we do not have the home dir for ubuntu while cloud-init, but we should save this script somewhere.

## -----------------------------------------------------------------------------
## /home/ubuntu/bin/save-iptables
#
## Create a script that will save iptables.
#cat << EOF >> /home/ubuntu/bin/save-iptables
##!/bin/bash -e
#
## Run this script if you change the iptables rules, so that the rules survive a reboot.
#sudo iptables-save  | sudo tee /etc/iptables/rules.v4
#sudo ip6tables-save | sudo tee /etc/iptables/rules.v6
#EOF
#chmod +x /home/ubuntu/bin/save-iptables




# TODO: we do not have the home dir for ubuntu while cloud-init, but we should save this script somewhere.

## -----------------------------------------------------------------------------
## /home/ubuntu/bin/test-bastion
#
## Create a script that will confirm iptables critical values for bastion
#cat << EOF >> /home/ubuntu/bin/test-bastion
##!/bin/bash -e
#
#sudo sysctl -q -w net.ipv4.ip_forward=1 net.ipv4.conf.${IFACE}.forwarding=1
#
#echo "Testing bastion capabilities..."
#
#echo ""
#echo "1) The following items should each have value of '1'"
#echo ""
#echo "If not, run this:"
#echo "  sudo sysctl -q -w net.ipv4.ip_forward=1 net.ipv4.conf.${IFACE}.forwarding=1"
#
#echo ""
##sudo sysctl net.ipv4.ip_forward net.ipv4.conf.${IFACE}.send_redirects net.ipv4.conf.${IFACE}.forwarding
#sudo sysctl net.ipv4.ip_forward net.ipv4.conf.${IFACE}.forwarding
#
#echo ""
#echo "2) check it out"
#sudo iptables -n -t nat -L POSTROUTING
#EOF
#chmod +x /home/ubuntu/bin/test-bastion
#
#echo "/home/ubuntu/bin/test-bastion" >> "/home/ubuntu/.bashrc"


echo "===== iptables ===== start"
